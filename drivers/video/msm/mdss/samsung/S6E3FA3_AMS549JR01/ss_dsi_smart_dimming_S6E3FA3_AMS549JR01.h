/*
 * =================================================================
 *
 *
 *	Description:  samsung display panel file
 *
 *	Author: jb09.kim
 *	Company:  Samsung Electronics
 *
 * ================================================================
 */
/*
<one line to give the program's name and a brief idea of what it does.>
Copyright (C) 2012, Samsung Electronics. All rights reserved.

*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301, USA.
 *
*/
#ifndef _SAMSUNG_DSI_SMART_DIMMING_S6E3FA3_AMS549JR01_H_
#define _SAMSUNG_DSI_SMART_DIMMING_S6E3FA3_AMS549JR01_H_

#include "../ss_dsi_panel_common.h"
#include "../ss_dsi_smart_dimming_common.h"

/*
*	From 4.8 inch model use AID function
*	CASE#1 is used for now.
*/
#define AID_OPERATION

enum {
	GAMMA_CURVE_1P9 = 0,
	GAMMA_CURVE_2P15,
	GAMMA_CURVE_2P2,
};

#define LUMINANCE_MAX 74
#define MAX_TABLE_HMT 37
#define GAMMA_SET_MAX 35
#define BIT_SHIFT 22
/*
	it means BIT_SHIFT is 22.  pow(2,BIT_SHIFT) is 4194304.
	BIT_SHIFT is used for right bit shfit
*/
#define BIT_SHFIT_MUL 4194304

#define GRAY_SCALE_MAX 256

/*6.2 * 4194304 */
#define VREG0_REF_6P2 26004685

/*V0,V3,V11,V23,V35,V51,V87,V151,V203,V255*/
#define ARRAY_MAX 11

/* PANEL DEPENDENT THINGS */
#define MIN_CANDELA	2

#define HBM_INTERPOLATION_STEP 7

/*
*	ID 0x20
*/
#define V255_300CD_R_MSB_20 0x01
#define V255_300CD_R_LSB_20 0x00

#define V255_300CD_G_MSB_20 0x01
#define V255_300CD_G_LSB_20 0x00

#define V255_300CD_B_MSB_20 0x01
#define V255_300CD_B_LSB_20 0x00

#define V203_300CD_R_20 0x80
#define V203_300CD_G_20 0x80
#define V203_300CD_B_20 0x80

#define V151_300CD_R_20 0x80
#define V151_300CD_G_20 0x80
#define V151_300CD_B_20 0x80

#define V87_300CD_R_20 0x80
#define V87_300CD_G_20 0x80
#define V87_300CD_B_20 0x80

#define V51_300CD_R_20 0x80
#define V51_300CD_G_20 0x80
#define V51_300CD_B_20 0x80

#define V35_300CD_R_20 0x80
#define V35_300CD_G_20 0x80
#define V35_300CD_B_20 0x80

#define V23_300CD_R_20 0x80
#define V23_300CD_G_20 0x80
#define V23_300CD_B_20 0x80

#define V11_300CD_R_20 0x80
#define V11_300CD_G_20 0x80
#define V11_300CD_B_20 0x80

#define V3_300CD_R_20 0x80
#define V3_300CD_G_20 0x80
#define V3_300CD_B_20 0x80

#define V0_300CD_R_20 0x00
#define V0_300CD_G_20 0x00
#define V0_300CD_B_20 0x00

#define VT_300CD_R_20 0x00
#define VT_300CD_G_20 0x00
#define VT_300CD_B_20 0x00

/* PANEL DEPENDENT THINGS END*/
enum {
	V1_INDEX = 0,
	V3_INDEX = 1,
	V11_INDEX = 2,
	V23_INDEX = 3,
	V35_INDEX = 4,
	V51_INDEX = 5,
	V87_INDEX = 6,
	V151_INDEX = 7,
	V203_INDEX = 8,
	V255_INDEX = 9,
};

struct GAMMA_LEVEL {
	int level_0;
	int level_1;
	int level_3;
	int level_11;
	int level_23;
	int level_35;
	int level_51;
	int level_87;
	int level_151;
	int level_203;
	int level_255;
} __packed;

struct RGB_OUTPUT_VOLTARE {
	struct GAMMA_LEVEL R_VOLTAGE;
	struct GAMMA_LEVEL G_VOLTAGE;
	struct GAMMA_LEVEL B_VOLTAGE;
} __packed;

struct GRAY_VOLTAGE {
	/*
		This voltage value use 14bit right shit
		it means voltage is divied by 16384.
	*/
	int R_Gray;
	int G_Gray;
	int B_Gray;
} __packed;

struct GRAY_SCALE {
	struct GRAY_VOLTAGE TABLE[GRAY_SCALE_MAX];
	struct GRAY_VOLTAGE VT_TABLE;
} __packed;

/*V0,V1,V3,V11,V23,V35,V51,V87,V151,V203,V255*/

struct MTP_SET {
	char OFFSET_255_MSB;
	char OFFSET_255_LSB;
	char OFFSET_203;
	char OFFSET_151;
	char OFFSET_87;
	char OFFSET_51;
	char OFFSET_35;
	char OFFSET_23;
	char OFFSET_11;
	char OFFSET_3;
	char OFFSET_0;
	char OFFSET_T;
} __packed;
struct MTP_SET_R {
	char OFFSET_255_MSB;
	char OFFSET_255_LSB;
	char OFFSET_203;
	char OFFSET_151;
	char OFFSET_87;
	char OFFSET_51;
	char OFFSET_35;
	char OFFSET_23;
	char OFFSET_11;
	char OFFSET_3;
	char OFFSET_0;
} __packed;

struct MTP_OFFSET {
	struct MTP_SET_R R_OFFSET;
	struct MTP_SET G_OFFSET;
	struct MTP_SET B_OFFSET;
} __packed;

struct illuminance_table {
	int lux;
	char gamma_setting[GAMMA_SET_MAX];
} __packed;

struct SMART_DIM {
	struct MTP_OFFSET MTP_ORIGN;
	struct MTP_OFFSET MTP;
	struct RGB_OUTPUT_VOLTARE RGB_OUTPUT;
	struct GRAY_SCALE GRAY;

	/* Because of AID funtion, below members are added*/
	int lux_table_max;
	int *plux_table;
	struct illuminance_table gen_table[LUMINANCE_MAX];
	struct illuminance_table hmt_gen_table[MAX_TABLE_HMT]; // For HMT

	int brightness_level;
	int ldi_revision;
	int vregout_voltage;

	/* HBM interpolation */
	struct illuminance_table hbm_interpolation_table[HBM_INTERPOLATION_STEP];
	char *hbm_payload;
	int hbm_brightness_level;
} __packed;

#define AOR_DIM_BASE_CD	128

#define CANDELA_MAX_TABLE 73
#define RGB_COMPENSATION 24

static int candela_table[][2] = {
	{2, 0,},
	{3, 1,},
	{4, 2,},
	{5, 3,},
	{6, 4,},
	{7, 5,},
	{8, 6,},
	{9, 7,},
	{10, 8,},
	{11, 9,},
	{12, 10,},
	{13, 11,},
	{14, 12,},
	{15, 13,},
	{16, 14,},
	{17, 15,},
	{19, 16,},
	{20, 17,},
	{21, 18,},
	{22, 19,},
	{24, 20,},
	{25, 21,},
	{27, 22,},
	{29, 23,},
	{30, 24,},
	{32, 25,},
	{34, 26,},
	{37, 27,},
	{39, 28,},
	{41, 29,},
	{44, 30,},
	{47, 31,},
	{50, 32,},
	{53, 33,},
	{56, 34,},
	{60, 35,},
	{64, 36,},
	{68, 37,},
	{72, 38,},
	{77, 39,},
	{82, 40,},
	{87, 41,},
	{93, 42,},
	{98, 43,},
	{105, 44,},
	{111, 45,},
	{119, 46,},
	{126, 47,},
	{134, 48,},
	{143, 49,},
	{152, 50,},
	{162, 51,},
	{172, 52,},
	{183, 53,},
	{195, 54,},
	{207, 55,},
	{220, 56,},
	{234, 57,},
	{249, 58,},
	{265, 59,},
	{282, 60,},
	{300, 61,},
	{316, 62,},
	{333, 63,},
	{350, 64,},
	{357, 65,},
	{365, 66,},
	{372, 67,},
	{380, 68,},
	{387, 69,},
	{395, 70,},
	{403, 71,},
	{412, 72,},
	{420, 73,},
};

static int gradation_offset_revA[][9] = {
/*	V255 V203 V151 V87 V51 V35 V23 V11 V3 */
    {   0,  9,  15, 24, 33, 37, 42, 45, 47}, //   2
    {   0,  9,  14, 23, 29, 33, 36, 39, 40}, //   3
    {   0,  8,  12, 20, 24, 28, 32, 35, 37}, //   4
    {   0,  7,  10, 16, 20, 25, 28, 31, 33}, //   5
    {   0,  6,  10, 18, 22, 25, 29, 31, 32}, //   6
    {   0,  6,  10, 17, 21, 23, 27, 30, 32}, //   7
    {   0,  6,  10, 15, 19, 22, 25, 29, 31}, //   8
    {   0,  6,  9,  15, 18, 21, 24, 28, 30}, //   9
    {   0,  6,  9,  14, 17, 20, 23, 27, 29}, //  10
    {   0,  6,  9,  14, 17, 20, 23, 27, 29}, //  11
    {   0,  5,  9,  13, 16, 19, 22, 25, 27}, //  12
    {   0,  5,  9,  13, 16, 18, 21, 25, 27}, //  13
    {   0,  4,  8,  13, 15, 18, 21, 24, 27}, //  14
    {   0,  4,  8,  13, 15, 18, 20, 24, 27}, //  15
    {   0,  4,  7,  12, 13, 18, 20, 24, 26}, //  16
    {   0,  4,  7,  11, 13, 17, 19, 23, 25}, //  17
    {   0,  4,  7,  10, 12, 15, 17, 21, 24}, //  19
    {   0,  4,  5,  7,  11, 13, 16, 19, 22}, //  20
    {   0,  4,  5,  7,  11, 13, 16, 19, 21}, //  21
    {   0,  4,  5,  7,  11, 13, 16, 18, 20}, //  22
    {   0,  4,  5,  7,  10, 12, 15, 18, 20}, //  24
    {   0,  4,  5,  7,  10, 12, 14, 18, 20}, //  25
    {   0,  4,  5,  7,  9,  11, 14, 17, 19}, //  27
    {   0,  4,  5,  7,  9,  10, 13, 16, 18}, //  29
    {   0,  4,  5,  6,  9,  10, 12, 15, 18}, //  30
    {   0,  4,  4,  6,  8,  10, 12, 15, 17}, //  32
    {   0,  4,  4,  5,  8,  9,  11, 14, 17}, //  34
    {   0,  3,  4,  5,  7,  8,  10, 13, 16}, //  37
    {   0,  3,  4,  5,  7,  8,  9,  13, 15}, //  39
    {   0,  3,  4,  4,  7,  8,  9,  12, 14}, //  41
    {   0,  3,  4,  4,  6,  7,  8,  12, 14}, //  44
    {   0,  3,  4,  4,  5,  7,  8,  11, 14}, //  47
    {   0,  3,  4,  3,  5,  6,  7,  10, 13}, //  50
    {   0,  3,  4,  3,  5,  6,  7,  10, 12}, //  53
    {   0,  3,  4,  3,  5,  6,  7,  10, 11}, //  56
    {   0,  3,  4,  3,  4,  5,  6,  9,  11}, //  60
    {   0,  3,  4,  3,  4,  4,  6,  8,  10}, //  64
    {   0,  3,  4,  3,  4,  4,  5,  7,  9 }, //  68
    {   0,  2,  4,  3,  4,  4,  5,  7,  9 }, //  72
    {   0,  2,  4,  3,  4,  4,  4,  7,  8 }, //  77
    {   0,  2,  4,  3,  3,  4,  4,  7,  8 }, //  82
    {   0,  2,  4,  3,  3,  4,  4,  7,  8 }, //  87
    {   0,  2,  4,  3,  3,  4,  4,  7,  8 }, //  93
    {   0,  2,  4,  3,  3,  3,  4,  6,  8 }, //  98
    {   0,  2,  4,  3,  3,  3,  4,  6,  8 }, // 105
    {   0,  2,  4,  3,  3,  3,  3,  6,  8 }, // 111
    {   0,  2,  4,  3,  3,  3,  3,  6,  8 }, // 119
    {   0,  2,  4,  3,  3,  3,  3,  5,  8 }, // 126
    {   0,  2,  4,  3,  3,  3,  3,  5,  7 }, // 134
    {   0,  2,  4,  3,  3,  3,  3,  5,  7 }, // 143
    {   0,  2,  4,  3,  3,  3,  3,  4,  6 }, // 152
    {   0,  2,  4,  3,  3,  3,  3,  4,  6 }, // 162
    {   0,  2,  4,  3,  3,  3,  3,  4,  6 }, // 172
    {   0,  1,  4,  3,  3,  2,  3,  4,  6 }, // 183
    {   0,  1,  4,  3,  2,  2,  2,  3,  5 }, // 195
    {   0,  1,  3,  3,  2,  2,  2,  3,  5 }, // 207
    {   0,  1,  3,  3,  2,  1,  2,  3,  4 }, // 220
    {   0,  1,  3,  3,  2,  1,  2,  3,  4 }, // 234
    {   0,  1,  3,  3,  2,  1,  1,  2,  3 }, // 249
    {   0,  1,  3,  2,  1,  1,  1,  1,  3 }, // 265
    {   0,  1,  3,  2,  1,  1,  1,  1,  2 }, // 282
    {   0,  1,  2,  2,  1,  1,  0,  1,  2 }, // 300
    {   0,  1,  2,  1,  1,  0,  0,  1,  2 }, // 316
    {   0,  1,  2,  0,  1,  0,  0,  1,  2 }, // 333
    {   0,  1,  1,  0,  1,  0,  0,  0,  1 }, // 350
    {   0,  1,  1,  0,  1,  0,  0,  0,  1 }, // 357
    {   0,  1,  1,  0,  0,  0,  0,  0,  1 }, // 365
    {   0,  1,  0,  0,  0,  0,  0,  0,  1 }, // 372
    {   0,  1,  0,  0,  0,  0,  0,  0,  1 }, // 380
    {   0,  1,  0,  0,  0,  0,  0,  0,  1 }, // 387
    {   0,  1,  0,  0,  0,  0,  0,  0,  1 }, // 395
    {   0,  0,  0,  0,  0,  0,  0,  0,  0 }, // 403
    {   0,  0,  0,  0,  0,  0,  0,  0,  0 }, // 412
    {   0,  0,  0,  0,  0,  0,  0,  0,  0 }, // 420
};

static int rgb_offset_revA[][RGB_COMPENSATION] = {
/*	R255 G255 B255 R203 G203 B203 R151 G151 B151
	R87 G87 B87 R51 G51 B51 R35 G35 B35
	R23 G23 B23 R11 G11 B11
*/
	{	-5,	0,	-4, -2, 0,	-2, -5, 0,	-5, -10,	0,	-9, -13,	0,	-9, 	-6, 0,	-6, -5, 0,	-3, -4, 0,	 -4},  //   2
	{	-3,	0,	-2, -2, 0,	-3, -5, 0,	-5, -8, 	0,	-8, -12,	0,	-11,	-6, 0,	-5, -4, 0,	-5, -6, 0,	 -6},  //   3
	{	-2,	0,	-1, -2, 0,	-3, -4, 0,	-4, -8, 	0,	-8, -11,	0,	-10,	-6, 0,	-6, -4, 0,	-5, -6, 0,	 -6},  //   4
	{	-2,	0,	-1, 0,	0,	-1, -2, 0,	-3, -8, 	0,	-8, -10,	0,	-10,	-6, 0,	-6, -5, 0,	-6, -6, 0,	 -7},  //   5
	{	-1,	0,	-1, 0,	0,	-1, -2, 0,	-2, -8, 	0,	-8, -11,	0,	-12,	-6, 0,	-7, -3, 0,	-4, -5, 0,	 -5},  //   6
	{	-1,	0,	-1, 0,	0,	-1, -2, 0,	-2, -9, 	0,	-9, -10,	0,	-11,	-6, 0,	-7, -4, 0,	-5, -5, 0,	 -5},  //   7
	{	-1,	0,	-1, 0,	0,	-1, -2, 0,	-1, -8, 	0,	-8, -11,	0,	-12,	-7, 0,	-8, -6, 0,	-8, -5, 0,	 -5},  //   8
	{	-1,	0,	-1, 0,	0,	-1, -2, 0,	-2, -8, 	0,	-8, -10,	0,	-12,	-7, 0,	-9, -6, 0,	-8, -5, 0,	 -5},  //   9
	{	-1,	0,	-1, 0,	0,	-1, -1, 0,	-1, -7, 	0,	-8, -10,	0,	-10,	-7, 0,	-9, -6, 0,	-8, -5, 0,	 -6},  //  10
	{	-1,	0,	-1, 0,	0,	-1, -2, 0,	-1, -7, 	0,	-8, -8, 	0,	-10,	-6, 0,	-8, -6, 0,	-8, -7, 0,	 -8},  //  11
	{	-1,	0,	-1, -1, 0,	-1, -2, 0,	-1, -6,		0,	-6, -8, 	0,	-10,	-7, 0,	-9, -6, 0,	-8, -6, 0,	 -8},  //  12
	{	0,	0,	-1, -1, 0,	-1, -2, 0,	-1, -6,		0,	-6, -8, 	0,	-10,	-8, 0,	-10,-7, 0,	-9, -6, 0,	 -9},  //  13
	{	0,	0,	-1, 0,	0,	-1, -2, 0,	-1, -5,		0,	-6, -8, 	0,	-10,	-9, 0,	-11,-6, 0,	-8, -6, 0,	 -9},  //  14
	{	0,	0,	-1, 0,	0,	-1, -2, 0,	-1, -5,		0,	-6, -7, 	0,	-9, 	-7, 0,	-9, -7, 0,	-8, -7, 0,	 -9},  //  15
	{	0,	0,	-1, 0,	0,	-1, -2, 0,	-1, -4,		0,	-5, -7, 	0,	-9, 	-7, 0,	-9, -5, 0,	-8, -8, 0,	-10},  //  16
	{	0,	0,	-1, 0,	0,	-1, -2, 0,	-1, -4,		0,	-5, -7,		0,	-9, 	-7, 0,	-9, -5, 0,	-8, -7, 0,	-10},  //  17
	{	0, 	0,	-1, 0,	0,	-1, -2, 0,	-1, -4,		0,	-5, -7,		0,	-8, 	-7, 0,	-9, -5, 0,	-8, -7, 0,	-10},  //  19
	{	0, 	0,	-1, 0,	0,	-1, -1, 0,	-1, -3,		0,	-4, -8,		0,	-8, 	-8, 0,	-8, -5, 0,	-8, -7, 0,	-11},  //  20
	{	0, 	0,	-1, 0,	0,	0,	-1, 0,	-1, -3,		0,	-4, -7,		0,	-8, 	-8, 0,	-8, -5, 0,	-8, -8, 0,	-10},  //  21
	{	0, 	0,	-1, 0,	0,	0,	-1, 0,	-1, -3,		0,	-4, -7,		0,	-8, 	-7, 0,	-9, -5, 0,	-7, -8, 0,	-13},  //  22
	{	0, 	0,	-1, 0,	0,	0,	-1, 0,	-1, -3, 	0,	-4, -7,		0,	-8, 	-8, 0,	-9, -5, 0,	-7, -8, 0,	-12},  //  24
	{	1, 	0,	0,	0,	0,	0,	-1, 0,	-1, -3, 	0,	-4, -6,		0,	-7, 	-8, 0,	-9, -7, 0,	-8, -8, 0,	-12},  //  25
	{	1, 	0,	0,	0,	0,	0,	-1, 0,	-1, -3, 	0,	-4, -6,		0,	-7, 	-7, 0,	-8, -7, 0,	-8, -8, 0,	-13},  //  27
	{	1, 	0,	0,	0,	0,	0,	-1, 0,	-1, -1, 	0,	-3, -6,		0,	-7, 	-7, 0,	-8, -6, 0,	-7, -8, 0,	-13},  //  29
	{	1, 	0,	0,	0,	0,	0,	-1, 0,	-1, -1, 	0,	-3, -5,		0,	-6, 	-6, 0,	-8, -8, 0,	-9, -8, 0,	-13},  //  30
	{	1, 	0,	0,	0,	0,	0,	-1, 0,	-2, -1, 	0,	-3, -5,		0,	-6, 	-6, 0,	-7, -7, 0,	-8, -8, 0,	-13},  //  32
	{	1, 	0,	0,	0,	0,	0,	-1, 0,	-2, -1, 	0,	-1, -5,		0,	-6, 	-6, 0,	-7, -8, 0,	-9, -7, 0,	-14},  //  34
	{	1, 	0,	0,	0,	0,	0,	-1, 0,	-1, -1, 	0,	-1, -5,		0,	-7, 	-6, 0,	-7, -6, 0,	-7, -8, 0,	-13},  //  37
	{	1, 	0,	0,	0,	0,	0,	-1, 0,	-1, -1, 	0,	-1, -5,		0,	-7, 	-4, 0,	-5, -8, 0,	-9, -7, 0,	-12},  //  39
	{	1, 	0,	0,	0,	0,	0,	-1, 0,	-1, 0,		0,	-2, -4,		0,	-6, 	-4, 0,	-5, -8, 0,	-9, -9, 0,	-15},  //  41
	{	1, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	-2, -4,		0,	-6, 	-4, 0,	-5, -7, 0,	-8, -8, 0,	-12},  //  44
	{	1, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	-2, -4,		0,	-5, 	-5, 0,	-5, -6, 0,	-7, -9, 0,	-15},  //  47
	{	1, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	-2, -3,		0,	-5, 	-5, 0,	-4, -6, 0,	-8, -9, 0,	-15},  //  50
	{	1, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	-2, -2,		0,	-4, 	-4, 0,	-4, -6, 0,	-7, -10,0,	-15},  //  53
	{	1, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	-2, -1,		0,	-3, 	-4, 0,	-3, -6, 0,	-7, -9, 0,	-14},  //  56
	{	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	-2, -1,		0,	-3, 	-4, 0,	-3, -6, 0,	-6, -9, 0,	-15},  //  60
	{	1,	0,	0,	0,	0,	0,	0,	0,	0,	1,		0,	0,	-5,		0,	-5, 	-3, 0,	-2, -4, 0,	-5, -8, 0,	-13},  //  64
	{	1, 	0,	0,	0,	0,	0,	0,	0,	0,	1,		0,	0,	-5,		0,	-5, 	-1, 0,	-1, -4, 0,	-5, -10,0,	-16},  //  68
	{	0, 	0,	-1, 1,	0,	1,	0,	0,	0,	1,		0,	0,	-4,		0,	-4, 	-1, 0,	-1, -4, 0,	-5, -9, 0,	-14},  //  72
	{	0, 	0,	-1, 1,	0,	1,	0,	0,	0,	1,		0,	-1, -4,		0,	-4, 	-1, 0,	-1, -5, 0,	-5, -7, 0,	-11},  //  77
	{	0, 	0,	-1, 1,	0,	0,	0,	0,	0,	0,		0,	-1, -4,		0,	-4, 	-1, 0,	-1, -4, 0,	-4, -9, 0,	-13},  //  82
	{	0, 	0,	-1, 1,	0,	0,	0,	0,	0,	0,		0,	0,	-1,		0,	-2, 	-3, 0,	-2, -4, 0,	-4, -10,0,	-12},  //  87
	{	0, 	0,	-1, 1,	0,	0,	0,	0,	0,	0,		0,	0,	-3,		0,	-3, 	-2, 0,	-2, -4, 0,	-5, -11,0,	-13},  //  93
	{	0, 	0,	-1, 1,	0,	0,	0,	0,	0,	0,		0,	0,	-5,		0,	-3, 	-2, 0,	-2, -4, 0,	-5, -10,0,	-12},  //  98
	{	0, 	0,	-1, 1,	0,	0,	0,	0,	0,	0,		0,	0,	-3,		0,	-3, 	-2, 0,	-2, -2, 0,	-4, -10,0,	-12},  // 105
	{	0, 	0,	-1, 0,	0,	0,	0,	0,	0,	0,		0,	0,	-2,		0,	-2, 	-1, 0,	0,	-2, 0,	-3, -10,0,	-12},  // 111
	{	0, 	0,	-1, 0,	0,	-1, 0,	0,	0,	0,		0,	0,	-2,		0,	-2, 	-1, 0,	0,	-2, 0,	-3, -10,0,	-12},  // 119
	{	0, 	0,	-1, 1,	0,	0,	0,	0,	0,	0,		0,	0,	-2,		0,	-2, 	-1, 0,	0,	-2, 0,	-3, -10,0,	-12},  // 126
	{	0, 	0,	-1, 0,	0,	-1, 0,	0,	-1, 0,		0,	0,	-2,		0,	-1, 	-1, 0,	0,	-2, 0,	-3, -6, 0,	 -8},  // 134
	{	0, 	0,	-1, 0,	0,	0,	0,	0,	-1, 0,		0,	0,	-2,		0,	-2, 	-1, 0,	0,	-2, 0,	-3, -5, 0,	 -6},  // 143
	{	0, 	0,	-1, 0,	0,	0,	0,	0,	-1, 0,		0,	0,	-2,		0,	-2, 	-1, 0,	0,	-2, 0,	-3, -10,0,	-10},  // 152
	{	1, 	0,	0,	0,	0,	0,	0,	0,	-1, 0,		0,	0,	-2,		0,	-2, 	0,	0,	0,	-2, 0,	-2, -9, 0,	-10},  // 162
	{	1, 	0,	0,	-1, 0,	-1, 0,	0,	-1, 0,		0,	0,	-2,		0,	-2, 	0,	0,	0,	-1, 0,	-3, -8, 0,	 -9},  // 172
	{	1, 	0,	0,	0,	0,	-1, 0,	0,	0,	0,		0,	0,	-1,		0,	-1,		0,	0,	0,	-3, 0,	-3, -9, 0,	 -9},  // 183
	{	1, 	0,	0,	0,	0,	-1, 0,	0,	0,	0,		0,	0,	-1,		0,	-1, 	0,	0,	0,	-2, 0,	-2, -7, 0,	 -8},  // 195
	{	1, 	0,	0,	0,	0,	-1, 0,	0,	0,	0,		0,	0,	-1,		0,	-1, 	0,	0,	0,	-1, 0,	-2, -7, 0,	 -6},  // 207
	{	1, 	0,	0,	0,	0,	-1, 0,	0,	0,	0,		0,	0,	-1,		0,	-1, 	0,	0,	0,	0,	0,	-1, -6, 0,	 -6},  // 220
	{	1, 	0,	0,	0,	0,	-1, 0,	0,	0,	0,		0,	0,	-1,		0,	-1, 	0,	0,	0,	0,	0,	-1, -5, 0,	 -5},  // 234
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 249
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 265
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 282
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 300
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 316
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 333
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 350
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 357
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 365
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 372
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 380
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 387
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 395
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 403
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 412
	{	0, 	0,	0,	0,	0,	0,	0,	0,	0,	0,		0,	0,	0,		0,	0,		0,	0,	0,	0,	0,	0,	0,	0,	  0},  // 420
};

//=============================
//             HMT
//=============================
static int gradation_offset_reverse_hmt_single[][9] = {
/*	V255 V203 V151 V87 V51 V35 V23 V11 V7 */
	{0,	1,	2,	2,	4,	5,	7,	9,	11},	//10
	{0,	1,	2,	2,	3,	6,	7,	8,	13},	//11
	{0,	1,	2,	2,	3,	5,	7,	8,	10},	//12
	{0,	0,	2,	2,	4,	4,	7,	8,	11},	//13
	{0,	1,	3,	2,	4,	5,	6,	8,	14},	//14
	{0,	2,	3,	3,	3,	4,	6,	9,	1},	//15
	{0,	2,	2,	2,	4,	4,	7,	8,	2},	//16
	{0,	1,	3,	3,	4,	5,	7,	7,	0},	//17
	{0,	2,	3,	3,	4,	5,	6,	7,	5},	//19
	{0,	3,	3,	3,	3,	5,	6,	7,	13},	//20
	{0,	2,	3,	2,	4,	4,	6,	8,	9},	//21
	{0,	3,	2,	3,	3,	4,	5,	7,	8},	//22
	{0,	2,	2,	2,	4,	3,	6,	8,	8},	//23
	{0,	3,	3,	3,	4,	4,	6,	7,	0},	//25
	{0,	3,	3,	2,	4,	4,	6,	7,	9},	//27
	{0,	4,	4,	3,	3,	4,	6,	7,	9},	//29
	{0,	3,	3,	4,	3,	4,	5,	7,	9},	//31
	{0,	4,	5,	4,	3,	4,	6,	8,	9},	//33
	{0,	3,	4,	4,	4,	4,	6,	8,	8},	//35
	{0,	4,	5,	4,	4,	4,	5,	7,	10},	//37
	{0,	4,	6,	5,	4,	5,	6,	7,	10},	//39
	{0,	3,	5,	4,	3,	4,	5,	7,	8},	//41
	{0,	4,	6,	5,	4,	5,	5,	7,	10},	//44
	{0,	3,	6,	5,	4,	5,	6,	8,	10},	//47
	{0,	3,	6,	5,	3,	4,	5,	7,	9},	//50
	{0,	3,	7,	6,	4,	5,	5,	7,	10},	//53
	{0,	4,	7,	6,	5,	5,	5,	7,	10},	//56
	{0,	4,	6,	5,	5,	4,	5,	7,	9},	//60
	{0,	4,	6,	6,	4,	4,	5,	7,	9},	//64
	{0,	4,	7,	7,	5,	5,	5,	7,	9},	//68
	{0,	4,	6,	5,	4,	4,	5,	7,	9},	//72
	{0,	3,	6,	4,	3,	2,	3,	4,	6},	//77
	{0,	3,	6,	5,	3,	3,	4,	4,	7},	//82
	{0,	3,	7,	5,	4,	3,	3,	5,	5},	//87
	{0,	3,	6,	5,	3,	3,	3,	4,	6},	//93
	{0,	4,	7,	5,	3,	3,	3,	4,	5},	//99
	{0,	4,	6,	4,	3,	2,	3,	4,	5},	//105
};

static int rgb_offset_reverse_hmt_single[][RGB_COMPENSATION] = {
/*	R255 G255 B255 R203 G203 B203 R151 G151 B151	R87 G87 B87 R51 G51 B51 R35 G35 B35 R23 G23 B23 R11 G11 B11*/
	/* 10 */	{0,	0,	0,	0,	0,	0,	0,	0,	0,	-1,	1,	-4,	-5,	2,	-6,	-8,	3,	-7,	-9,	3,	-7,	-18,	2,	-5},
	/* 11 */	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	-3,	-5,	2,	-6,	-6,	2,	-6,	-10,	3,	-8,	-21,	2,	-6},
	/* 12 */	{0,	0,	0,	0,	0,	-1,	-1,	0,	0,	0,	1,	-2,	-5,	2,	-6,	-7,	2,	-5,	-6,	2,	-6,	-19,	3,	-6},
	/* 13 */	{-1,	0,	0,	0,	0,	-1,	0,	0,	0,	-1,	1,	-2,	-4,	2,	-6,	-8,	2,	-6,	-6,	3,	-6,	-19,	3,	-6},
	/* 14 */	{0,	0,	0,	-1,	0,	-2,	0,	0,	0,	-1,	0,	-2,	-3,	2,	-5,	-7,	2,	-6,	-8,	4,	-8,	-18,	3,	-6},
	/* 15 */	{-1,	0,	0,	0,	0,	-1,	0,	0,	-1,	0,	1,	-2,	-3,	2,	-6,	-7,	2,	-5,	-9,	3,	-7,	-14,	2,	-5},
	/* 16 */	{-1,	0,	0,	0,	0,	0,	0,	0,	0,	-1,	0,	-2,	-4,	2,	-6,	-7,	2,	-5,	-6,	2,	-5,	-25,	3,	-6},
	/* 17 */	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	-2,	-3,	2,	-5,	-7,	2,	-5,	-7,	2,	-6,	-26,	3,	-7},
	/* 19 */	{-1,	0,	0,	0,	0,	0,	0,	0,	0,	-1,	0,	-2,	-2,	2,	-5,	-5,	2,	-4,	-8,	3,	-7,	-24,	3,	-6},
	/* 20 */	{0,	0,	1,	0,	0,	-1,	-1,	0,	0,	0,	0,	-2,	-2,	2,	-5,	-6,	2,	-4,	-7,	3,	-7,	-25,	3,	-7},
	/* 21 */	{0,	0,	0,	-1,	0,	0,	-1,	0,	-1,	0,	0,	-1,	-2,	2,	-4,	-6,	2,	-5,	-6,	2,	-5,	-18,	4,	-8},
	/* 22 */	{0,	0,	1,	0,	0,	0,	0,	0,	0,	-2,	0,	-1,	-2,	2,	-5,	-4,	2,	-4,	-7,	3,	-7,	-24,	3,	-7},
	/* 23 */	{0,	0,	1,	0,	0,	-1,	0,	0,	0,	-1,	0,	-1,	-1,	2,	-4,	-5,	2,	-5,	-7,	2,	-6,	-19,	4,	-8},
	/* 25 */	{-1,	0,	0,	0,	0,	0,	1,	0,	0,	-1,	0,	-1,	-2,	2,	-4,	-4,	2,	-4,	-6,	3,	-6,	-18,	4,	-8},
	/* 27 */	{0,	0,	1,	0,	0,	0,	0,	0,	0,	-1,	0,	0,	-2,	2,	-5,	-4,	2,	-4,	-5,	2,	-5,	-20,	4,	-9},
	/* 29 */	{0,	0,	1,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	-2,	2,	-4,	-4,	2,	-4,	-5,	2,	-5,	-20,	4,	-9},
	/* 31 */	{0,	0,	2,	0,	0,	0,	0,	0,	-1,	0,	0,	0,	-1,	2,	-4,	-4,	1,	-4,	-6,	3,	-6,	-19,	4,	-9},
	/* 33 */	{0,	0,	2,	0,	0,	-1,	0,	0,	-1,	0,	0,	0,	-2,	2,	-5,	-5,	1,	-4,	-5,	2,	-5,	-17,	4,	-10},
	/* 35 */	{0,	0,	2,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	-2,	2,	-4,	-3,	2,	-4,	-4,	2,	-5,	-16,	4,	-9},
	/* 37 */	{0,	0,	1,	0,	0,	-1,	0,	0,	-1,	0,	0,	-1,	-1,	1,	-3,	-3,	2,	-4,	-5,	2,	-6,	-16,	4,	-9},
	/* 39 */	{0,	0,	2,	0,	0,	-1,	0,	0,	-1,	0,	0,	-1,	-2,	1,	-3,	-3,	2,	-4,	-4,	2,	-5,	-18,	4,	-10},
	/* 41 */	{0,	0,	3,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	0,	1,	-3,	-3,	2,	-4,	-5,	2,	-5,	-14,	4,	-8},
	/* 44 */	{0,	0,	3,	0,	0,	0,	0,	0,	0,	-1,	0,	-2,	-1,	1,	-3,	-4,	1,	-4,	-4,	2,	-5,	-14,	4,	-8},
	/* 47 */	{0,	0,	3,	0,	0,	0,	0,	0,	-1,	0,	0,	-1,	-1,	1,	-3,	-3,	1,	-4,	-4,	2,	-5,	-14,	4,	-8},
	/* 50 */	{0,	0,	3,	1,	0,	0,	0,	0,	0,	0,	0,	-1,	-1,	1,	-3,	-3,	1,	-4,	-4,	2,	-5,	-13,	3,	-8},
	/* 53 */	{0,	0,	3,	0,	0,	0,	0,	0,	-2,	0,	0,	0,	0,	1,	-2,	-3,	1,	-4,	-5,	2,	-6,	-14,	3,	-8},
	/* 56 */	{0,	0,	3,	0,	0,	-1,	0,	0,	0,	-1,	0,	-1,	-1,	1,	-2,	-3,	1,	-4,	-4,	2,	-5,	-13,	4,	-9},
	/* 60 */	{0,	0,	4,	0,	0,	0,	0,	0,	-1,	0,	0,	0,	-1,	0,	-2,	-3,	1,	-4,	-4,	2,	-5,	-12,	3,	-8},
	/* 64 */	{0,	0,	3,	0,	0,	0,	0,	0,	-1,	0,	0,	-1,	-2,	0,	-2,	-3,	1,	-4,	-3,	2,	-4,	-11,	3,	-8},
	/* 68 */	{0,	0,	3,	0,	0,	0,	0,	0,	-1,	0,	0,	-1,	-1,	0,	-2,	-2,	1,	-4,	-5,	2,	-6,	-11,	3,	-8},
	/* 72 */	{1,	0,	4,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	-1,	1,	-2,	-1,	1,	-3,	-3,	2,	-4,	-10,	3,	-8},
	/* 77 */	{0,	0,	4,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	0,	1,	-2,	-1,	1,	-3,	-2,	1,	-3,	-9,	3,	-8},
	/* 82 */	{1,	0,	4,	0,	0,	-1,	0,	0,	-1,	0,	0,	0,	-1,	0,	-2,	-1,	1,	-2,	-4,	1,	-3,	-10,	4,	-9},
	/* 87 */	{0,	0,	4,	0,	0,	-1,	0,	0,	-2,	0,	0,	0,	0,	0,	-2,	-1,	1,	-2,	-3,	1,	-3,	-9,	3,	-8},
	/* 93 */	{1,	0,	4,	0,	0,	-1,	0,	0,	-1,	-1,	0,	0,	0,	0,	0,	0,	1,	-2,	-4,	1,	-3,	-10,	4,	-9},
	/* 99 */	{0,	0,	3,	0,	0,	0,	0,	0,	-1,	0,	0,	0,	-1,	0,	-1,	-1,	1,	-3,	-2,	1,	-2,	-9,	3,	-8},
	/* 105 */	{0,	0,	4,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-2,	-1,	1,	-2,	-2,	1,	-2,	-8,	3,	-8},
};

static int base_luminance_reverse_hmt_single[][2] = {
	{10,	49},
	{11,	53},
	{12,	60},
	{13,	64},
	{14,	67},
	{15,	73},
	{16,	77},
	{17,	81},
	{19,	91},
	{20,	93},
	{21,	99},
	{22,	100},
	{23,	106},
	{25,	114},
	{27,	121},
	{29,	129},
	{31,	136},
	{33,	144},
	{35,	152},
	{37,	161},
	{39,	169},
	{41,	177},
	{44,	187},
	{47,	200},
	{50,	209},
	{53,	222},
	{56,	233},
	{60,	245},
	{64,	264},
	{68,	273},
	{72,	292},
	{77,	217},
	{82,	230},
	{87,	244},
	{93,	255},
	{99,	271},
	{105,	286},
};

static int ccg6_candela_table_reverse_hmt[][2] = {
	{10,	 0},
	{11,	 1},
	{12,	 2},
	{13,	 3},
	{14,	 4},
	{15,	 5},
	{16,	 6},
	{17,	 7},
	{19,	 8},
	{20,	 9},
	{21,	 10},
	{22,	 11},
	{23,	 12},
	{25,	 13},
	{27,	 14},
	{29,	 15},
	{31,	 16},
	{33,	 17},
	{35,	 18},
	{37,	 19},
	{39,	 20},
	{41,	 21},
	{44,	 22},
	{47,	 23},
	{50,	 24},
	{53,	 25},
	{56,	 26},
	{60,	 27},
	{64,	 28},
	{68,	 29},
	{72,	 30},
	{77,	 31},
	{82,	 32},
	{87,	 33},
	{93,	 34},
	{99,	 35},
	{105,	 36},
};
#endif
